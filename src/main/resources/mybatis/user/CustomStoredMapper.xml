<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CustomStoredMapper">
	
	<!--表名 -->
	<sql id="tableName">
		TB_CUSTOM_STORED
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">	
		CARD_ID,	
		REMAIN_MONEY,	
		REMAIN_POINTS,	
		STATUS,
		UID,
		PHONE,
		NAME
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{CARD_ID},	
		#{REMAIN_MONEY},	
		#{REMAIN_POINTS},	
		#{STATUS},
		#{UID},
		#{PHONE},
		#{NAME}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
		TB_CUSTOM_STORED(UID,PHONE,NAME,STATUS,REMAIN_MONEY,REMAIN_POINTS) 
		values(#{UID},#{PHONE},#{NAME},#{STATUS},#{REMAIN_MONEY},#{REMAIN_POINTS}) 
	
		
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			UID = #{UID}
	</delete>
	
	<!-- 自己写的修改 充值时用 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
		REMAIN_MONEY = REMAIN_MONEY + #{REMAIN_MONEY},	
		REMAIN_POINTS = REMAIN_POINTS + #{REMAIN_POINTS},
		UID = #{UID}
		where 
		UID = #{UID}
	</update>
	
	<!-- 自己写的修改 充值时用 -->
	<update id="editPsd" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
		PASSWORD = #{PASSWORD}
		where 
		UID = #{UID}
	</update>
	
	
	<update id="editMember" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
		UID = #{UID},
		NAME = #{NAME},
		PHONE = #{PHONE}	
		where 
		UID = #{UID}
	</update>
	
	<update id="editSubMoney" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
		REMAIN_MONEY = #{REMAIN_MONEY},	
		REMAIN_POINTS = #{REMAIN_POINTS},
		UID = #{UID}
		where 
		UID = #{UID}
	</update>
	
	<!-- 通过UID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
	<!--	select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			UID = #{UID}   -->
	select a.*,b.name
		from 
		TB_CUSTOM_STORED a
		LEFT OUTER JOIN tab_user b
		 on
		a.UID=b.uid
		where a.UID = #{UID}
	</select>
	
	<!-- 通检查用户储值卡密码-->
	<select id="checkpassword" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			UID=#{UID} and PASSWORD=#{PASSWORD}
	</select>


	<!-- 通过CARD_ID获取数据 -->
	<select id="findByCARDId" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			CARD_ID = #{CARD_ID}
	</select>
	
	<!-- 通过PHONE获取数据 -->
	<select id="findByPhone" parameterType="String" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			PHONE = #{phone}
	</select>
	<!-- 通过PHONE获取数据 -->
	<select id="findByUid" parameterType="Integer" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			UID = #{uid}
	</select>
	
	<!-- 列表 -->


		<!-- 列表 -->

	<select id="datalistPage" parameterType="page" resultType="pd">
		select *
		
		from TB_CUSTOM_STORED 
		<include refid="tableName"></include>
		where 1=1
		
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(

					PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 


				)
		</if>
	</select>
	
	
	<select id="findAlllistPage" parameterType="page" resultType="pd">
		select a.*,b.username,b.usercategory_id,c.CATEGORY_NAME
		from 
		TB_CUSTOM_STORED a,tab_user b,tb_usercategory c
		
		where 1=1
		and
		a.UID = b.uid
		and 
		b.usercategory_id = c.USERCATEGORY_ID

		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				
					a.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
				    a.PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
			         or
					 b.username LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.STATUS!= null and pd.STATUS != ''">
			and a.STATUS = #{pd.STATUS}
		</if>
		
	</select>
	
		<select id="findAll" parameterType="pd" resultType="pd">
		select a.*,b.username,b.usercategory_id,c.CATEGORY_NAME
		from 
		TB_CUSTOM_STORED a,tab_user b,tb_usercategory c
		
		where 1=1
		and
		a.UID = b.uid
		and 
		b.usercategory_id = c.USERCATEGORY_ID

		<if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
			and
				(
				
					a.NAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
					 or 
				    a.PHONE LIKE CONCAT(CONCAT('%', #{keywords}),'%') 
			         or
					 b.username LIKE CONCAT(CONCAT('%', #{keywords}),'%') 
				)
		</if>
		<if test="STATUS!= null and STATUS != ''">
			and a.STATUS = #{STATUS}
		</if>
		
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			UID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 新增-->
	<insert id="saveMx" parameterType="pd">
		insert into 
		TB_STORED_DETAIL(STOREDDETAIL_ID,UID,STORE_ID,STAFF_ID,CREATE_TIME,MONEY,TYPE,POINTS) 
		values(#{STOREDDETAIL_ID},#{UID},#{STORE_ID},#{STAFF_ID},#{CREATE_TIME},#{MONEY},#{TYPE},#{POINTS}) 
	
	</insert>
	
	
		<select id="selectStoredCountAndRemainByUid" parameterType="pd" resultType="pd">
		select 
		IFNULL(remain_money+remain_points,0.00) as remain,count(storeddetail_id) as storedcount
		
		from 
		<include refid="tableName"></include>,tb_stored_detail
		where 
			tb_custom_stored.UID = #{uid} 
		and tb_custom_stored.uid = tb_stored_detail.uid 
		and tb_stored_detail.type in (0,1)
	</select>
</mapper>